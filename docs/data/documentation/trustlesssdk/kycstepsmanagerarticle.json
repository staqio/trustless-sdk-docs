{"variants":[{"paths":["\/documentation\/trustlesssdk\/kycstepsmanagerarticle"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.staq.TrustlessSDK\/documentation\/TrustlessSDK"]]},"abstract":[{"text":"A class responsible for managing an individual step in the KYC process.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"inlineContent":[{"code":"KYCStepsManager","type":"codeVoice"},{"text":" defines the essential functionalities for managing an individual step in the KYC process. It includes properties for getting the code and title of the step.","type":"text"}],"type":"paragraph"},{"anchor":"Main-Concept","level":2,"text":"Main Concept","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"For handling KYC steps, TrustlessSDK provides ","type":"text"},{"type":"codeVoice","code":"KYCStepsManager"},{"type":"text","text":". This manager streamlines the integration of Staq Server APIs for Know Your Customer (KYC) verification. You can retrieve this from "},{"code":"KYCProvider","type":"codeVoice"},{"text":". For example:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import TrustlessSDK","","var kycStepsManager: KYCStepsManager?","","_ = TrustlessSDK.kycProvider.getStepsManager() { result in","    switch result {","    case .success(let manager):","        kycStepsManager = manager","    case .failure(let error):","        \/\/ handle error","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"KYCStepsManager"},{"text":" provides a ","type":"text"},{"type":"codeVoice","code":"KYCStepsManager\/steps"},{"text":" property to access all KYC steps. This step object is represented by the ","type":"text"},{"type":"codeVoice","code":"KYCStepManager"},{"type":"text","text":" class, which helps manage an individual step in the KYC process."}]},{"code":["import TrustlessSDK","","let stepsManager: KYCStepsManager!","let step: KYCStepManager = stepsManager.steps[0]","let errors = step.validate()","","for error in errors {","    \/\/ Display errors.","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"code":"KYCStepManager","type":"codeVoice"},{"type":"text","text":" provides a "},{"code":"KYCStepManager\/delegate","type":"codeVoice"},{"type":"text","text":" for handling updates and validation errors."}],"type":"paragraph"},{"code":["import TrustlessSDK","","let stepsManager: KYCStepsManager!","let step: KYCStepManager = stepsManager.steps[0]","step.delegate = Delegate()","","class Delegate: KYCFormStepDelegate {","    func didUpdateDependentFields(stepManager: KYCStepManager) {","        \/\/ handle new mandatory fields","    }","","    func didReceiveValidationError(stepManager: KYCStepManager) {","        \/\/ handle validation error","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"For accessing step fields, you can use the following properties:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"KYCStepManager\/fields"},{"text":", all fields within the form step;","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"KYCStepManager\/mandatoryFields"},{"text":", mandatory fields within the form step;","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"KYCStepManager\/documentFields"},{"type":"text","text":", document fields within the form step."}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"And for managing the step, it provides such methods as:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"KYCStepManager\/getField(withCode:)","type":"codeVoice"},{"type":"text","text":", get a field within step with code;"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"KYCStepManager\/getField(withName:)","type":"codeVoice"},{"text":", get a field within step with name;","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"KYCStepManager\/configureSourceFields(_:)"},{"type":"text","text":", configure source fields for this form step;"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"KYCStepManager\/validate()"},{"type":"text","text":", validate all mandatory fields in form steps;"}]}]},{"content":[{"inlineContent":[{"code":"KYCStepManager\/getValues()","type":"codeVoice"},{"type":"text","text":", get values for this form step;"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"KYCStepManager\/getJson()","type":"codeVoice"},{"type":"text","text":", get JSON-compatible values for this from step."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Each KYC field is represented as ","type":"text"},{"code":"KYCBaseField","type":"codeVoice"},{"text":", handling necessary properties for a specific type and providing methods to validate, put or clear error, and retrieve value for specific needs.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"More useful classes inherit ","type":"text"},{"type":"codeVoice","code":"KYCBaseField"},{"type":"text","text":", so you can cast any "},{"type":"codeVoice","code":"KYCBaseField"},{"type":"text","text":" to another field class as follows:"}]},{"code":["import TrustlessSDK","","let baseField: KYCBaseField!","let textField = baseField as? KYCTextField","","\/\/ textField.value will be `String` type"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The list of all available field types:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"KYCBooleanField"},{"type":"text","text":", you can safely cast from "},{"code":"KYCBaseField","type":"codeVoice"},{"type":"text","text":" with type "},{"type":"codeVoice","code":"KYCFieldType\/boolean"},{"type":"text","text":";"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"KYCDateField"},{"text":", you can safely cast from ","type":"text"},{"type":"codeVoice","code":"KYCBaseField"},{"type":"text","text":" with type "},{"type":"codeVoice","code":"KYCFieldType\/date"},{"type":"text","text":";"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"KYCDocumentField"},{"type":"text","text":", you can savefly cast from "},{"type":"codeVoice","code":"KYCBaseField"},{"text":" with type ","type":"text"},{"code":"KYCFieldType\/document","type":"codeVoice"},{"type":"text","text":";"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"KYCSelectField"},{"text":", you can safely cast from ","type":"text"},{"type":"codeVoice","code":"KYCBaseField"},{"type":"text","text":" with type "},{"code":"KYCFieldType\/lov","type":"codeVoice"},{"text":";","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"KYCTextField"},{"type":"text","text":", you can safely cast from "},{"type":"codeVoice","code":"KYCBaseField"},{"type":"text","text":" with type "},{"code":"KYCFieldType\/text","type":"codeVoice"},{"type":"text","text":";"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"KYCUrlField","type":"codeVoice"},{"text":", you can safely cast from ","type":"text"},{"code":"KYCBaseField","type":"codeVoice"},{"type":"text","text":" with type "},{"code":"KYCFieldType\/url","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"Additionally, TrustlessSDK utilizes "},{"code":"KYCGenericField","type":"codeVoice"},{"text":" for handling custom fields presented in the list above.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more details, follow the links in the article."}]},{"content":[{"inlineContent":[{"type":"text","text":"TrustlessSDK doesnâ€™t support "},{"type":"codeVoice","code":"KYCFieldType\/arrayOfText"},{"type":"text","text":" type. You can use custom "},{"code":"KYCBaseField\/field","type":"codeVoice"},{"text":" to access the original response from the server for these fields (","type":"text"},{"code":"KYCFieldObject","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}],"name":"Note","style":"note","type":"aside"},{"anchor":"Basic-Example","level":2,"text":"Basic Example","type":"heading"},{"type":"codeListing","syntax":"swift","code":["import TrustlessSDK","","class ViewController: UIViewController {","    var stepManager: KYCStepManager?","","    let tableView = UITableView()","","    func handleContinuePress(_ sender: Any) {","        guard let stepManager = stepManager else { return }","","        guard stepManager.validate() == nil else {","            \/\/ Handle errors.","            return","        }","","        let isLastStep = stepManager.index == formStepManager.mandatoryFields.count","        if isLastStep {","            \/\/ you can get values and send request","        } else {","            \/\/ you can move to next step","        }","    }","}","","","extension ViewController: UITableViewDataSource, UITableViewDelegate {","    func numberOfSections(in tableView: UITableView) -> Int {","        return 1","    }","","    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {","        return formStepManager?.mandatoryFields.count ?? 0","    }","","    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {","        guard let formStepManager = formStepManager,","              let fieldObject = formStepManager.?.mandatoryFields[indexPath.row]","        else { return UITableViewCell() }","","        switch fieldObject.type {","        case .boolean:","            let cell = tableView.dequeueReusableCell(withIdentifier: \"BooleanFieldCell\", for: indexPath) as! BooleanFieldTableViewCell","            return cell","        case .lov, .url:","            let cell = tableView.dequeueReusableCell(withIdentifier: \"SelectFieldCell\", for: indexPath) as! SelectFieldTableViewCell","            return cell","        case .text, .integer, .decimal:","            let cell = tableView.dequeueReusableCell(withIdentifier: \"TextFieldCell\", for: indexPath) as! TextFieldTableViewCell","            return cell","        case .date:","            let cell = tableView.dequeueReusableCell(withIdentifier: \"DateFieldCell\", for: indexPath) as! DateFieldTableViewCell","            return cell","        case .document:","            let cell = tableView.dequeueReusableCell(withIdentifier: \"FileFieldCell\", for: indexPath) as! FileFieldTableViewCell","            return cell","        default:","            return UITableViewCell()","        }","    }","}",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/ TODO: add kyc scan section"}]}],"kind":"content"}],"metadata":{"modules":[{"name":"TrustlessSDK"}],"title":"KYC Steps Manager","roleHeading":"Article","role":"article"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.staq.TrustlessSDK\/documentation\/TrustlessSDK\/KYCStepsManagerArticle"},"sections":[],"seeAlsoSections":[{"title":"Articles","generated":true,"identifiers":["doc:\/\/com.staq.TrustlessSDK\/documentation\/TrustlessSDK\/IntegrationArticle","doc:\/\/com.staq.TrustlessSDK\/documentation\/TrustlessSDK\/RequestSendingArticle","doc:\/\/com.staq.TrustlessSDK\/documentation\/TrustlessSDK\/PaginatorArticle"]}],"references":{"doc://com.staq.TrustlessSDK/documentation/TrustlessSDK/IntegrationArticle":{"kind":"article","abstract":[{"type":"text","text":"Integration of TrustlessSDK: Client Secrets and Client Certificate."}],"identifier":"doc:\/\/com.staq.TrustlessSDK\/documentation\/TrustlessSDK\/IntegrationArticle","type":"topic","title":"Integration","role":"article","url":"\/documentation\/trustlesssdk\/integrationarticle"},"doc://com.staq.TrustlessSDK/documentation/TrustlessSDK/RequestSendingArticle":{"kind":"article","abstract":[{"type":"text","text":"Sending requests to and receiving responses from Staq Server APIs: A detailed walkthrough."}],"type":"topic","identifier":"doc:\/\/com.staq.TrustlessSDK\/documentation\/TrustlessSDK\/RequestSendingArticle","title":"Request Sending","role":"article","url":"\/documentation\/trustlesssdk\/requestsendingarticle"},"doc://com.staq.TrustlessSDK/documentation/TrustlessSDK/PaginatorArticle":{"kind":"article","abstract":[{"type":"text","text":"Sending and handling paginated requests: Paginator helper."}],"identifier":"doc:\/\/com.staq.TrustlessSDK\/documentation\/TrustlessSDK\/PaginatorArticle","type":"topic","title":"Paginator Usage","role":"article","url":"\/documentation\/trustlesssdk\/paginatorarticle"},"doc://com.staq.TrustlessSDK/documentation/TrustlessSDK":{"title":"TrustlessSDK","url":"\/documentation\/trustlesssdk","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.staq.TrustlessSDK\/documentation\/TrustlessSDK","role":"collection","type":"topic"}}}